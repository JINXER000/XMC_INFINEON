; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--cpp --split_sections --debug -c -S -o.\objects\wstring.s --depend=.\objects\wstring.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\cores -I.\RTE\Device\XMC4700-F144x2048 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Infineon\XMC4000_DFP\2.9.1\Device\XMC4700_series\Include -IC:\Keil_v5\ARM\PACK\Infineon\XMC4000_DFP\2.9.1\Device\XMClib\inc -IC:\Keil_v5\ARM\PACK\Infineon\XMC4000_DFP\2.9.1\RTE_Driver -D__UVISION_VERSION=524 -D_RTE_ -DXMC4700_F144x2048 --omf_browse=.\objects\wstring.crf cores\WString.cpp]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.NOPS_FOR_USEC||, CODE, READONLY, ALIGN=1

NOPS_FOR_USEC PROC
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        BX       lr
        ENDP


        AREA ||i._ZN6String10invalidateEv||, CODE, READONLY, ALIGN=1

_ZN6String10invalidateEv PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        CBZ      r0,|L1.14|
        LDR      r0,[r4,#0]
        BL       free
|L1.14|
        MOVS     r0,#0
        STR      r0,[r4,#0]
        STR      r0,[r4,#8]
        STR      r0,[r4,#4]
        POP      {r4,pc}
        ENDP


        AREA ||i._ZN6String11toLowerCaseEv||, CODE, READONLY, ALIGN=1

_ZN6String11toLowerCaseEv PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r0,[r5,#0]
        CBNZ     r0,|L2.10|
|L2.8|
        POP      {r4-r6,pc}
|L2.10|
        LDR      r4,[r5,#0]
        B        |L2.24|
|L2.14|
        LDRB     r0,[r4,#0]
        BL       tolower
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
|L2.24|
        LDRB     r0,[r4,#0]
        CMP      r0,#0
        BNE      |L2.14|
        NOP      
        B        |L2.8|
        ENDP


        AREA ||i._ZN6String11toUpperCaseEv||, CODE, READONLY, ALIGN=1

_ZN6String11toUpperCaseEv PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r0,[r5,#0]
        CBNZ     r0,|L3.10|
|L3.8|
        POP      {r4-r6,pc}
|L3.10|
        LDR      r4,[r5,#0]
        B        |L3.24|
|L3.14|
        LDRB     r0,[r4,#0]
        BL       toupper
        STRB     r0,[r4,#0]
        ADDS     r4,r4,#1
|L3.24|
        LDRB     r0,[r4,#0]
        CMP      r0,#0
        BNE      |L3.14|
        NOP      
        B        |L3.8|
        ENDP


        AREA ||i._ZN6String12changeBufferEj||, CODE, READONLY, ALIGN=1

_ZN6String12changeBufferEj PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        ADDS     r1,r5,#1
        LDR      r0,[r4,#0]
        BL       realloc
        MOV      r6,r0
        CBZ      r6,|L4.26|
        STR      r6,[r4,#0]
        STR      r5,[r4,#4]
        MOVS     r0,#1
|L4.24|
        POP      {r4-r6,pc}
|L4.26|
        MOVS     r0,#0
        B        |L4.24|
        ENDP


        AREA ||i._ZN6String4copyEPKcj||, CODE, READONLY, ALIGN=1

_ZN6String4copyEPKcj PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZN6String7reserveEj
        CBNZ     r0,|L5.28|
        MOV      r0,r4
        BL       _ZN6String10invalidateEv
        MOV      r0,r4
|L5.26|
        POP      {r4-r6,pc}
|L5.28|
        STR      r5,[r4,#8]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       strcpy
        MOV      r0,r4
        B        |L5.26|
        ENDP


        AREA ||i._ZN6String4trimEv||, CODE, READONLY, ALIGN=1

_ZN6String4trimEv PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        CBZ      r0,|L6.12|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L6.14|
|L6.12|
        POP      {r4-r6,pc}
|L6.14|
        LDR      r5,[r4,#0]
        B        |L6.20|
|L6.18|
        ADDS     r5,r5,#1
|L6.20|
        LDRB     r0,[r5,#0]
        BL       isspace
        CMP      r0,#0
        BNE      |L6.18|
        LDR      r1,[r4,#8]
        LDR      r0,[r4,#0]
        ADD      r0,r0,r1
        SUBS     r6,r0,#1
        B        |L6.42|
|L6.40|
        SUBS     r6,r6,#1
|L6.42|
        LDRB     r0,[r6,#0]
        BL       isspace
        CBZ      r0,|L6.54|
        CMP      r6,r5
        BCS      |L6.40|
|L6.54|
        ADDS     r0,r6,#1
        SUBS     r0,r0,r5
        STR      r0,[r4,#8]
        LDR      r0,[r4,#0]
        CMP      r0,r5
        BCS      |L6.76|
        MOV      r1,r5
        LDR      r2,[r4,#8]
        LDR      r0,[r4,#0]
        BL       __aeabi_memcpy
|L6.76|
        MOVS     r0,#0
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        STRB     r0,[r1,r2]
        NOP      
        B        |L6.12|
        ENDP


        AREA ||i._ZN6String6concatEPKc||, CODE, READONLY, ALIGN=1

_ZN6String6concatEPKc PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBNZ     r4,|L7.12|
        MOVS     r0,#0
|L7.10|
        POP      {r4-r6,pc}
|L7.12|
        MOV      r0,r4
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        B        |L7.10|
        ENDP


        AREA ||i._ZN6String6concatEPKcj||, CODE, READONLY, ALIGN=1

_ZN6String6concatEPKcj PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        LDR      r0,[r4,#8]
        ADDS     r7,r0,r5
        CBNZ     r6,|L8.22|
        MOVS     r0,#0
|L8.18|
        POP      {r4-r8,pc}
|L8.22|
        CBNZ     r5,|L8.28|
        MOVS     r0,#1
        B        |L8.18|
|L8.28|
        MOV      r1,r7
        MOV      r0,r4
        BL       _ZN6String7reserveEj
        CBNZ     r0,|L8.42|
        MOVS     r0,#0
        B        |L8.18|
|L8.42|
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        ADDS     r0,r1,r2
        MOV      r1,r6
        BL       strcpy
        STR      r7,[r4,#8]
        MOVS     r0,#1
        B        |L8.18|
        ENDP


        AREA ||i._ZN6String6concatERKS_||, CODE, READONLY, ALIGN=1

_ZN6String6concatERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r5
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        BL       _ZN6String6concatEPKcj
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6String6concatEc||, CODE, READONLY, ALIGN=1

_ZN6String6concatEc PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        STRB     r4,[sp,#0]
        MOVS     r0,#0
        STRB     r0,[sp,#1]
        MOVS     r2,#1
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r3-r5,pc}
        ENDP


        AREA ||i._ZN6String6concatEd||, CODE, READONLY, ALIGN=1

_ZN6String6concatEd PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8-d9}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        VMOV.F32 s16,s0
        VMOV.F32 s17,s1
        VMOV     r0,r1,d8
        BL       __aeabi_d2f
        VMOV     s18,r0
        ADD      r2,sp,#4
        MOVS     r1,#2
        MOVS     r0,#4
        VMOV.F32 s0,s18
        BL       dtostrf
        MOV      r4,r0
        MOV      r0,r4
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        ADD      sp,sp,#0x18
        VPOP     {d8-d9}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6String6concatEf||, CODE, READONLY, ALIGN=1

_ZN6String6concatEf PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        VMOV.F32 s16,s0
        ADD      r2,sp,#4
        MOVS     r1,#2
        MOVS     r0,#4
        VMOV.F32 s0,s16
        BL       dtostrf
        MOV      r5,r0
        MOV      r0,r5
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZN6String6concatEPKcj
        ADD      sp,sp,#0x18
        VPOP     {d8}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6String6concatEh||, CODE, READONLY, ALIGN=1

_ZN6String6concatEh PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r2,#0xa
        MOV      r1,sp
        MOV      r0,r4
        BL       itoa
        MOV      r0,sp
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r3-r7,pc}
        ENDP


        AREA ||i._ZN6String6concatEi||, CODE, READONLY, ALIGN=1

_ZN6String6concatEi PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r2,#0xa
        MOV      r1,sp
        MOV      r0,r4
        BL       itoa
        MOV      r0,sp
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r1-r7,pc}
        ENDP


        AREA ||i._ZN6String6concatEj||, CODE, READONLY, ALIGN=1

_ZN6String6concatEj PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r2,#0xa
        MOV      r1,sp
        MOV      r0,r4
        BL       utoa
        MOV      r0,sp
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r1-r7,pc}
        ENDP


        AREA ||i._ZN6String6concatEl||, CODE, READONLY, ALIGN=1

_ZN6String6concatEl PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r2,#0xa
        MOV      r1,sp
        MOV      r0,r4
        BL       ltoa
        MOV      r0,sp
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r1-r7,pc}
        ENDP


        AREA ||i._ZN6String6concatEm||, CODE, READONLY, ALIGN=1

_ZN6String6concatEm PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOVS     r2,#0xa
        MOV      r1,sp
        MOV      r0,r4
        BL       ultoa
        MOV      r0,sp
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6String6concatEPKcj
        POP      {r1-r7,pc}
        ENDP


        AREA ||i._ZN6String6removeEj||, CODE, READONLY, ALIGN=1

_ZN6String6removeEj PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BHI      |L18.14|
|L18.12|
        POP      {r4-r6,pc}
|L18.14|
        LDR      r0,[r4,#8]
        SUBS     r6,r0,r5
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZN6String6removeEjj
        NOP      
        B        |L18.12|
        ENDP


        AREA ||i._ZN6String6removeEjj||, CODE, READONLY, ALIGN=1

_ZN6String6removeEjj PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BHI      |L19.20|
|L19.16|
        POP      {r4-r8,pc}
|L19.20|
        CBNZ     r6,|L19.24|
        B        |L19.16|
|L19.24|
        ADDS     r0,r5,r6
        LDR      r1,[r4,#8]
        CMP      r0,r1
        BLS      |L19.36|
        LDR      r0,[r4,#8]
        SUBS     r6,r0,r5
|L19.36|
        LDR      r0,[r4,#0]
        ADDS     r7,r0,r5
        LDR      r0,[r4,#8]
        SUBS     r0,r0,r6
        STR      r0,[r4,#8]
        LDR      r0,[r4,#8]
        SUBS     r2,r0,r5
        LDR      r0,[r4,#0]
        ADD      r0,r0,r5
        ADDS     r1,r0,r6
        MOV      r0,r7
        BL       strncpy
        MOVS     r0,#0
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        STRB     r0,[r1,r2]
        NOP      
        B        |L19.16|
        ENDP


        AREA ||i._ZN6String7replaceERKS_S1_||, CODE, READONLY, ALIGN=1

_ZN6String7replaceERKS_S1_ PROC
        PUSH     {r4-r12,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        LDR      r0,[r4,#8]
        CBZ      r0,|L20.18|
        LDR      r0,[r6,#8]
        CBNZ     r0,|L20.22|
|L20.18|
        POP      {r4-r12,pc}
|L20.22|
        LDR      r0,[r5,#8]
        LDR      r1,[r6,#8]
        SUB      r8,r0,r1
        LDR      r9,[r4,#0]
        CMP      r8,#0
        BNE      |L20.72|
        B        |L20.58|
|L20.42|
        MOV      r0,r7
        LDR      r2,[r5,#8]
        LDR      r1,[r5,#0]
        BL       __aeabi_memcpy
        LDR      r0,[r5,#8]
        ADD      r9,r0,r7
|L20.58|
        MOV      r0,r9
        LDR      r1,[r6,#0]
        BL       _ZSt6strstrPcPKc
        SUBS     r7,r0,#0
        BNE      |L20.42|
        B        |L20.296|
|L20.72|
        CMP      r8,#0
        BGE      |L20.150|
        LDR      r10,[r4,#0]
        B        |L20.128|
|L20.84|
        SUB      r11,r7,r9
        MOV      r2,r11
        MOV      r1,r9
        MOV      r0,r10
        BL       __aeabi_memcpy
        ADD      r10,r10,r11
        MOV      r0,r10
        LDR      r2,[r5,#8]
        LDR      r1,[r5,#0]
        BL       __aeabi_memcpy
        LDR      r0,[r5,#8]
        ADD      r10,r10,r0
        LDR      r0,[r6,#8]
        ADD      r9,r0,r7
        LDR      r0,[r4,#8]
        ADD      r0,r0,r8
        STR      r0,[r4,#8]
        NOP      
|L20.128|
        MOV      r0,r9
        LDR      r1,[r6,#0]
        BL       _ZSt6strstrPcPKc
        SUBS     r7,r0,#0
        BNE      |L20.84|
        MOV      r1,r9
        MOV      r0,r10
        BL       strcpy
        B        |L20.296|
|L20.150|
        LDR      r11,[r4,#8]
        B        |L20.164|
|L20.156|
        LDR      r0,[r6,#8]
        ADD      r9,r0,r7
        ADD      r11,r11,r8
|L20.164|
        MOV      r0,r9
        LDR      r1,[r6,#0]
        BL       _ZSt6strstrPcPKc
        SUBS     r7,r0,#0
        BNE      |L20.156|
        LDR      r0,[r4,#8]
        CMP      r0,r11
        BNE      |L20.184|
        B        |L20.18|
|L20.184|
        LDR      r0,[r4,#4]
        CMP      r0,r11
        BCS      |L20.202|
        MOV      r1,r11
        MOV      r0,r4
        BL       _ZN6String12changeBufferEj
        CBNZ     r0,|L20.202|
        B        |L20.18|
|L20.202|
        LDR      r0,[r4,#8]
        SUB      r10,r0,#1
        B        |L20.272|
|L20.210|
        LDR      r0,[r4,#0]
        ADD      r0,r0,r10
        LDR      r1,[r6,#8]
        ADD      r9,r0,r1
        LDR      r3,[r4,#0]
        SUB      r3,r9,r3
        LDR      r1,[r4,#8]
        SUBS     r2,r1,r3
        ADD      r0,r9,r8
        MOV      r1,r9
        BL       __aeabi_memmove
        LDR      r0,[r4,#8]
        ADD      r0,r0,r8
        STR      r0,[r4,#8]
        MOVS     r0,#0
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        STRB     r0,[r1,r2]
        LDR      r2,[r5,#8]
        LDR      r1,[r5,#0]
        LDR      r3,[r4,#0]
        ADD      r0,r3,r10
        BL       __aeabi_memcpy
        SUB      r10,r10,#1
|L20.272|
        CMP      r10,#0
        BLT      |L20.294|
        MOV      r2,r10
        MOV      r1,r6
        MOV      r0,r4
        BL       _ZNK6String11lastIndexOfERKS_j
        SUBS     r10,r0,#0
        BGE      |L20.210|
|L20.294|
        NOP      
|L20.296|
        NOP      
        B        |L20.18|
        ENDP


        AREA ||i._ZN6String7replaceEcc||, CODE, READONLY, ALIGN=1

_ZN6String7replaceEcc PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        LDR      r0,[r3,#0]
        CBNZ     r0,|L21.10|
|L21.8|
        POP      {r4,pc}
|L21.10|
        LDR      r0,[r3,#0]
        B        |L21.24|
|L21.14|
        LDRB     r4,[r0,#0]
        CMP      r4,r1
        BNE      |L21.22|
        STRB     r2,[r0,#0]
|L21.22|
        ADDS     r0,r0,#1
|L21.24|
        LDRB     r4,[r0,#0]
        CMP      r4,#0
        BNE      |L21.14|
        NOP      
        B        |L21.8|
        ENDP


        AREA ||i._ZN6String7reserveEj||, CODE, READONLY, ALIGN=1

_ZN6String7reserveEj PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#0]
        CBZ      r0,|L22.20|
        LDR      r0,[r4,#4]
        CMP      r0,r5
        BCC      |L22.20|
        MOVS     r0,#1
|L22.18|
        POP      {r4-r6,pc}
|L22.20|
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZN6String12changeBufferEj
        CBZ      r0,|L22.44|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L22.40|
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STRB     r0,[r1,#0]
|L22.40|
        MOVS     r0,#1
        B        |L22.18|
|L22.44|
        MOVS     r0,#0
        B        |L22.18|
        ENDP


        AREA ||i._ZN6String9setCharAtEjc||, CODE, READONLY, ALIGN=1

_ZN6String9setCharAtEjc PROC
        LDR      r3,[r0,#8]
        CMP      r3,r1
        BLS      |L23.10|
        LDR      r3,[r0,#0]
        STRB     r2,[r3,r1]
|L23.10|
        BX       lr
        ENDP


        AREA ||i._ZN6StringC1EPKc||, CODE, READONLY, ALIGN=1

_ZN6StringC2EPKc                  ; Alternate entry point
_ZN6StringC1EPKc PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r5
        BL       _ZN6String4initEv
        CBZ      r4,|L24.32|
        MOV      r0,r4
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r5
        BL       _ZN6String4copyEPKcj
|L24.32|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1ERKS_||, CODE, READONLY, ALIGN=1

_ZN6StringC2ERKS_                  ; Alternate entry point
_ZN6StringC1ERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r4
        BL       _ZN6String4initEv
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZN6StringaSERKS_
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Ec||, CODE, READONLY, ALIGN=1

_ZN6StringC2Ec                  ; Alternate entry point
_ZN6StringC1Ec PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r5
        BL       _ZN6String4initEv
        STRB     r4,[sp,#0]
        MOVS     r0,#0
        STRB     r0,[sp,#1]
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        POP      {r3-r5,pc}
        ENDP


        AREA ||i._ZN6StringC1Edh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Edh                  ; Alternate entry point
_ZN6StringC1Edh PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8-d9}
        SUB      sp,sp,#0x28
        MOV      r5,r0
        VMOV.F32 s16,s0
        VMOV.F32 s17,s1
        MOV      r4,r1
        MOV      r0,r5
        BL       _ZN6String4initEv
        VMOV     r0,r1,d8
        BL       __aeabi_d2f
        VMOV     s18,r0
        ADD      r2,sp,#4
        MOV      r1,r4
        ADDS     r0,r4,#2
        VMOV.F32 s0,s18
        BL       dtostrf
        MOV      r6,r0
        MOV      r1,r6
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x28
        VPOP     {d8-d9}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Efh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Efh                  ; Alternate entry point
_ZN6StringC1Efh PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8}
        SUB      sp,sp,#0x28
        MOV      r5,r0
        VMOV.F32 s16,s0
        MOV      r4,r1
        MOV      r0,r5
        BL       _ZN6String4initEv
        ADD      r2,sp,#4
        MOV      r1,r4
        ADDS     r0,r4,#2
        VMOV.F32 s0,s16
        BL       dtostrf
        MOV      r6,r0
        MOV      r1,r6
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x28
        VPOP     {d8}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Ehh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Ehh                  ; Alternate entry point
_ZN6StringC1Ehh PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r0,r5
        BL       _ZN6String4initEv
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r4
        BL       utoa
        MOV      r1,sp
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        POP      {r1-r7,pc}
        ENDP


        AREA ||i._ZN6StringC1Eih||, CODE, READONLY, ALIGN=1

_ZN6StringC2Eih                  ; Alternate entry point
_ZN6StringC1Eih PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r0,r5
        BL       _ZN6String4initEv
        MOV      r2,r6
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       itoa
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x18
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Ejh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Ejh                  ; Alternate entry point
_ZN6StringC1Ejh PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r0,r5
        BL       _ZN6String4initEv
        MOV      r2,r6
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       utoa
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x18
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Elh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Elh                  ; Alternate entry point
_ZN6StringC1Elh PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x28
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r0,r5
        BL       _ZN6String4initEv
        MOV      r2,r6
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       ltoa
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x28
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringC1Emh||, CODE, READONLY, ALIGN=1

_ZN6StringC2Emh                  ; Alternate entry point
_ZN6StringC1Emh PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x28
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r0,r5
        BL       _ZN6String4initEv
        MOV      r2,r6
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       ultoa
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       _ZN6StringaSEPKc
        MOV      r0,r5
        ADD      sp,sp,#0x28
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringD1Ev||, CODE, READONLY, ALIGN=1

_ZN6StringD2Ev                  ; Alternate entry point
_ZN6StringD1Ev PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        BL       free
        MOV      r0,r4
        POP      {r4,pc}
        ENDP


        AREA ||i._ZN6StringaSEPKc||, CODE, READONLY, ALIGN=1

_ZN6StringaSEPKc PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CBZ      r4,|L35.28|
        MOV      r0,r4
        BL       strlen
        MOV      r6,r0
        MOV      r2,r6
        MOV      r1,r4
        MOV      r0,r5
        BL       _ZN6String4copyEPKcj
        B        |L35.34|
|L35.28|
        MOV      r0,r5
        BL       _ZN6String10invalidateEv
|L35.34|
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZN6StringaSERKS_||, CODE, READONLY, ALIGN=1

_ZN6StringaSERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        CMP      r5,r4
        BNE      |L36.14|
        MOV      r0,r5
|L36.12|
        POP      {r4-r6,pc}
|L36.14|
        LDR      r0,[r4,#0]
        CBZ      r0,|L36.30|
        MOV      r0,r5
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        BL       _ZN6String4copyEPKcj
        B        |L36.36|
|L36.30|
        MOV      r0,r5
        BL       _ZN6String10invalidateEv
|L36.36|
        MOV      r0,r5
        B        |L36.12|
        ENDP


        AREA ||i._ZN6StringixEj||, CODE, READONLY, ALIGN=2

_ZN6StringixEj PROC
        MOV      r2,r0
        LDR      r0,[r2,#8]
        CMP      r0,r1
        BLS      |L37.12|
        LDR      r0,[r2,#0]
        CBNZ     r0,|L37.22|
|L37.12|
        MOVS     r0,#0
        LDR      r3,|L37.28|
        STRB     r0,[r3,#0]
        MOV      r0,r3
|L37.20|
        BX       lr
|L37.22|
        LDR      r0,[r2,#0]
        ADD      r0,r0,r1
        B        |L37.20|
        ENDP

|L37.28|
        DCD      dummy_writable_char

        AREA ||i._ZNK6String10startsWithERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String10startsWithERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        LDR      r1,[r5,#8]
        CMP      r0,r1
        BCS      |L38.18|
        MOVS     r0,#0
|L38.16|
        POP      {r4-r6,pc}
|L38.18|
        MOVS     r2,#0
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String10startsWithERKS_j
        B        |L38.16|
        ENDP


        AREA ||i._ZNK6String10startsWithERKS_j||, CODE, READONLY, ALIGN=1

_ZNK6String10startsWithERKS_j PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        LDR      r0,[r5,#8]
        LDR      r1,[r4,#8]
        SUBS     r0,r0,r1
        CMP      r0,r6
        BCC      |L39.26|
        LDR      r0,[r5,#0]
        CBZ      r0,|L39.26|
        LDR      r0,[r4,#0]
        CBNZ     r0,|L39.30|
|L39.26|
        MOVS     r0,#0
|L39.28|
        POP      {r4-r6,pc}
|L39.30|
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        LDR      r3,[r5,#0]
        ADDS     r0,r3,r6
        BL       strncmp
        CBNZ     r0,|L39.48|
        MOVS     r0,#1
        B        |L39.28|
|L39.48|
        MOVS     r0,#0
        B        |L39.28|
        ENDP


        AREA ||i._ZNK6String11lastIndexOfERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String11lastIndexOfERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        LDR      r1,[r5,#8]
        SUBS     r2,r0,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String11lastIndexOfERKS_j
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZNK6String11lastIndexOfERKS_j||, CODE, READONLY, ALIGN=1

_ZNK6String11lastIndexOfERKS_j PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r7,r2
        LDR      r0,[r6,#8]
        CBZ      r0,|L41.26|
        LDR      r0,[r4,#8]
        CBZ      r0,|L41.26|
        LDR      r0,[r6,#8]
        LDR      r1,[r4,#8]
        CMP      r0,r1
        BLS      |L41.34|
|L41.26|
        MOV      r0,#0xffffffff
|L41.30|
        POP      {r4-r8,pc}
|L41.34|
        LDR      r0,[r4,#8]
        CMP      r0,r7
        BHI      |L41.44|
        LDR      r0,[r4,#8]
        SUBS     r7,r0,#1
|L41.44|
        MOV      r8,#0xffffffff
        LDR      r5,[r4,#0]
        B        |L41.82|
|L41.52|
        MOV      r0,r5
        LDR      r1,[r6,#0]
        BL       _ZSt6strstrPcPKc
        MOV      r5,r0
        CBNZ     r5,|L41.66|
        B        |L41.90|
|L41.66|
        LDR      r0,[r4,#0]
        SUBS     r0,r5,r0
        CMP      r0,r7
        BHI      |L41.80|
        LDR      r0,[r4,#0]
        SUB      r8,r5,r0
|L41.80|
        ADDS     r5,r5,#1
|L41.82|
        LDR      r0,[r4,#0]
        ADD      r0,r0,r7
        CMP      r0,r5
        BCS      |L41.52|
|L41.90|
        MOV      r0,r8
        B        |L41.30|
        ENDP


        AREA ||i._ZNK6String11lastIndexOfEc||, CODE, READONLY, ALIGN=1

_ZNK6String11lastIndexOfEc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        SUBS     r2,r0,#1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String11lastIndexOfEcj
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZNK6String11lastIndexOfEcj||, CODE, READONLY, ALIGN=1

_ZNK6String11lastIndexOfEcj PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r5,r2
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BHI      |L43.24|
        MOV      r0,#0xffffffff
|L43.20|
        POP      {r4-r10,pc}
|L43.24|
        ADDS     r0,r5,#1
        LDR      r1,[r4,#0]
        LDRB     r8,[r1,r0]
        MOVS     r1,#0
        LDR      r2,[r4,#0]
        STRB     r1,[r2,r0]
        LDR      r9,[r4,#0]
        MOV      r1,r7
        MOV      r0,r9
        BL       strrchr
        MOV      r6,r0
        NOP      
        ADDS     r0,r5,#1
        LDR      r1,[r4,#0]
        STRB     r8,[r1,r0]
        CBNZ     r6,|L43.70|
        MOV      r0,#0xffffffff
        B        |L43.20|
|L43.70|
        LDR      r0,[r4,#0]
        SUBS     r0,r6,r0
        B        |L43.20|
        ENDP


        AREA ||i._ZNK6String16equalsIgnoreCaseERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String16equalsIgnoreCaseERKS_ PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        CMP      r4,r5
        BNE      |L44.18|
        MOVS     r0,#1
|L44.14|
        POP      {r4-r8,pc}
|L44.18|
        LDR      r0,[r4,#8]
        LDR      r1,[r5,#8]
        CMP      r0,r1
        BEQ      |L44.30|
        MOVS     r0,#0
        B        |L44.14|
|L44.30|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L44.38|
        MOVS     r0,#1
        B        |L44.14|
|L44.38|
        LDR      r6,[r4,#0]
        LDR      r7,[r5,#0]
        B        |L44.70|
|L44.44|
        LDRB     r0,[r6],#1
        BL       tolower
        MOV      r8,r0
        LDRB     r0,[r7],#1
        BL       tolower
        CMP      r8,r0
        BEQ      |L44.70|
        MOVS     r0,#0
        B        |L44.14|
|L44.70|
        LDRB     r0,[r6,#0]
        CMP      r0,#0
        BNE      |L44.44|
        MOVS     r0,#1
        B        |L44.14|
        ENDP


        AREA ||i._ZNK6String5toIntEv||, CODE, READONLY, ALIGN=1

_ZNK6String5toIntEv PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        CBZ      r0,|L45.16|
        LDR      r0,[r4,#0]
        BL       atol
|L45.14|
        POP      {r4,pc}
|L45.16|
        MOVS     r0,#0
        B        |L45.14|
        ENDP


        AREA ||i._ZNK6String6charAtEj||, CODE, READONLY, ALIGN=1

_ZNK6String6charAtEj PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOV      r4,r1
        MOV      r1,r4
        MOV      r0,r3
        BL       _ZNK6StringixEj
        POP      {r4,pc}
        ENDP


        AREA ||i._ZNK6String6equalsEPKc||, CODE, READONLY, ALIGN=1

_ZNK6String6equalsEPKc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        CBNZ     r0,|L47.24|
        CBZ      r5,|L47.16|
        LDRB     r0,[r5,#0]
        CBNZ     r0,|L47.20|
|L47.16|
        MOVS     r0,#1
|L47.18|
        POP      {r4-r6,pc}
|L47.20|
        MOVS     r0,#0
        B        |L47.18|
|L47.24|
        CBNZ     r5,|L47.40|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#0]
        CBNZ     r0,|L47.36|
        MOVS     r0,#1
        B        |L47.18|
|L47.36|
        MOVS     r0,#0
        B        |L47.18|
|L47.40|
        MOV      r1,r5
        LDR      r0,[r4,#0]
        BL       strcmp
        CBNZ     r0,|L47.54|
        MOVS     r0,#1
        B        |L47.18|
|L47.54|
        MOVS     r0,#0
        B        |L47.18|
        ENDP


        AREA ||i._ZNK6String6equalsERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String6equalsERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        LDR      r1,[r5,#8]
        CMP      r0,r1
        BNE      |L48.28|
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String9compareToERKS_
        CBNZ     r0,|L48.28|
        MOVS     r0,#1
|L48.26|
        POP      {r4-r6,pc}
|L48.28|
        MOVS     r0,#0
        B        |L48.26|
        ENDP


        AREA ||i._ZNK6String7indexOfERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String7indexOfERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r2,#0
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String7indexOfERKS_j
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZNK6String7indexOfERKS_j||, CODE, READONLY, ALIGN=1

_ZNK6String7indexOfERKS_j PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r6,r2
        LDR      r0,[r4,#8]
        CMP      r0,r6
        BHI      |L50.24|
        MOV      r0,#0xffffffff
|L50.20|
        POP      {r4-r8,pc}
|L50.24|
        LDR      r1,[r7,#0]
        LDR      r2,[r4,#0]
        ADDS     r0,r2,r6
        BL       _ZSt6strstrPcPKc
        MOV      r5,r0
        CBNZ     r5,|L50.44|
        MOV      r0,#0xffffffff
        B        |L50.20|
|L50.44|
        LDR      r0,[r4,#0]
        SUBS     r0,r5,r0
        B        |L50.20|
        ENDP


        AREA ||i._ZNK6String7indexOfEc||, CODE, READONLY, ALIGN=1

_ZNK6String7indexOfEc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r2,#0
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String7indexOfEcj
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZNK6String7indexOfEcj||, CODE, READONLY, ALIGN=1

_ZNK6String7indexOfEcj PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r7,r1
        MOV      r6,r2
        LDR      r0,[r5,#8]
        CMP      r0,r6
        BHI      |L52.24|
        MOV      r0,#0xffffffff
|L52.20|
        POP      {r4-r8,pc}
|L52.24|
        LDR      r0,[r5,#0]
        ADD      r8,r0,r6
        MOV      r1,r7
        MOV      r0,r8
        BL       strchr
        MOV      r4,r0
        NOP      
        CBNZ     r4,|L52.50|
        MOV      r0,#0xffffffff
        B        |L52.20|
|L52.50|
        LDR      r0,[r5,#0]
        SUBS     r0,r4,r0
        B        |L52.20|
        ENDP


        AREA ||i._ZNK6String7toFloatEv||, CODE, READONLY, ALIGN=2

_ZNK6String7toFloatEv PROC
        PUSH     {r4,lr}
        VPUSH    {d8}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        CBZ      r0,|L53.44|
        LDR      r0,[r4,#0]
        BL       __hardfp_atof
        VMOV.F32 s16,s0
        VMOV.F32 s17,s1
        VMOV     r0,r1,d8
        BL       __aeabi_d2f
        VMOV     s0,r0
|L53.38|
        VPOP     {d8}
        POP      {r4,pc}
|L53.44|
        VLDR     s0,|L53.52|
        B        |L53.38|
        ENDP

        DCW      0x0000
|L53.52|
        DCFS     0x00000000 ; 0

        AREA ||i._ZNK6String8endsWithERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String8endsWithERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#8]
        LDR      r1,[r5,#8]
        CMP      r0,r1
        BCC      |L54.22|
        LDR      r0,[r4,#0]
        CBZ      r0,|L54.22|
        LDR      r0,[r5,#0]
        CBNZ     r0,|L54.26|
|L54.22|
        MOVS     r0,#0
|L54.24|
        POP      {r4-r6,pc}
|L54.26|
        LDR      r2,[r4,#8]
        LDR      r3,[r5,#8]
        SUBS     r2,r2,r3
        LDR      r3,[r4,#0]
        ADDS     r0,r2,r3
        LDR      r1,[r5,#0]
        BL       strcmp
        CBNZ     r0,|L54.48|
        MOVS     r0,#1
        B        |L54.24|
|L54.48|
        MOVS     r0,#0
        B        |L54.24|
        ENDP


        AREA ||i._ZNK6String8getBytesEPhjj||, CODE, READONLY, ALIGN=1

_ZNK6String8getBytesEPhjj PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r8,r2
        MOV      r6,r3
        CMP      r8,#0
        BEQ      |L55.20|
        CBNZ     r5,|L55.24|
|L55.20|
        POP      {r4-r8,pc}
|L55.24|
        LDR      r0,[r4,#8]
        CMP      r0,r6
        BHI      |L55.36|
        MOVS     r0,#0
        STRB     r0,[r5,#0]
        B        |L55.20|
|L55.36|
        SUB      r7,r8,#1
        LDR      r0,[r4,#8]
        SUBS     r0,r0,r6
        CMP      r0,r7
        BCS      |L55.52|
        LDR      r0,[r4,#8]
        SUBS     r7,r0,r6
|L55.52|
        LDR      r0,[r4,#0]
        ADDS     r1,r0,r6
        MOV      r2,r7
        MOV      r0,r5
        BL       strncpy
        MOVS     r0,#0
        STRB     r0,[r5,r7]
        NOP      
        B        |L55.20|
        ENDP


        AREA ||i._ZNK6String9compareToERKS_||, CODE, READONLY, ALIGN=1

_ZNK6String9compareToERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,[r4,#0]
        CBZ      r0,|L56.14|
        LDR      r0,[r5,#0]
        CBNZ     r0,|L56.48|
|L56.14|
        LDR      r0,[r5,#0]
        CBZ      r0,|L56.30|
        LDR      r0,[r5,#8]
        CBZ      r0,|L56.30|
        LDR      r0,[r5,#0]
        LDRB     r0,[r0,#0]
        RSBS     r0,r0,#0
|L56.28|
        POP      {r4-r6,pc}
|L56.30|
        LDR      r0,[r4,#0]
        CBZ      r0,|L56.44|
        LDR      r0,[r4,#8]
        CBZ      r0,|L56.44|
        LDR      r0,[r4,#0]
        LDRB     r0,[r0,#0]
        B        |L56.28|
|L56.44|
        MOVS     r0,#0
        B        |L56.28|
|L56.48|
        LDR      r1,[r5,#0]
        LDR      r0,[r4,#0]
        BL       strcmp
        B        |L56.28|
        ENDP


        AREA ||i._ZNK6String9substringEjj||, CODE, READONLY, ALIGN=2

_ZNK6String9substringEjj PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r5,r3
        CMP      r6,r5
        BLS      |L57.24|
        MOV      r0,r5
        MOV      r5,r6
        MOV      r6,r0
        NOP      
|L57.24|
        ADR      r1,|L57.80|
        MOV      r0,r8
        BL       _ZN6StringC1EPKc
        MOV      r8,r0
        LDR      r0,[r4,#8]
        CMP      r0,r6
        BCS      |L57.44|
|L57.40|
        POP      {r4-r8,pc}
|L57.44|
        LDR      r0,[r4,#8]
        CMP      r0,r5
        BCS      |L57.52|
        LDR      r5,[r4,#8]
|L57.52|
        LDR      r0,[r4,#0]
        LDRB     r7,[r0,r5]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STRB     r0,[r1,r5]
        LDR      r0,[r4,#0]
        ADDS     r1,r0,r6
        MOV      r0,r8
        BL       _ZN6StringaSEPKc
        LDR      r0,[r4,#0]
        STRB     r7,[r0,r5]
        NOP      
        B        |L57.40|
        ENDP

|L57.80|
        DCB      0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i._ZNK6StringgeERKS_||, CODE, READONLY, ALIGN=1

_ZNK6StringgeERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String9compareToERKS_
        ASRS     r0,r0,#31
        ADDS     r0,r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZNK6StringgtERKS_||, CODE, READONLY, ALIGN=1

_ZNK6StringgtERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String9compareToERKS_
        CMP      r0,#0
        BLE      |L59.22|
        MOVS     r0,#1
|L59.20|
        POP      {r4-r6,pc}
|L59.22|
        MOVS     r0,#0
        B        |L59.20|
        ENDP


        AREA ||i._ZNK6StringixEj||, CODE, READONLY, ALIGN=1

_ZNK6StringixEj PROC
        MOV      r2,r0
        LDR      r0,[r2,#8]
        CMP      r0,r1
        BLS      |L60.12|
        LDR      r0,[r2,#0]
        CBNZ     r0,|L60.16|
|L60.12|
        MOVS     r0,#0
|L60.14|
        BX       lr
|L60.16|
        LDR      r0,[r2,#0]
        LDRB     r0,[r0,r1]
        B        |L60.14|
        ENDP


        AREA ||i._ZNK6StringleERKS_||, CODE, READONLY, ALIGN=1

_ZNK6StringleERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String9compareToERKS_
        CMP      r0,#0
        BGT      |L61.22|
        MOVS     r0,#1
|L61.20|
        POP      {r4-r6,pc}
|L61.22|
        MOVS     r0,#0
        B        |L61.20|
        ENDP


        AREA ||i._ZNK6StringltERKS_||, CODE, READONLY, ALIGN=1

_ZNK6StringltERKS_ PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       _ZNK6String9compareToERKS_
        LSRS     r0,r0,#31
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperPKc||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperPKc PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r5
        CBZ      r4,|L63.32|
        MOV      r0,r4
        BL       strlen
        MOV      r7,r0
        MOV      r2,r7
        MOV      r1,r4
        MOV      r0,r6
        BL       _ZN6String6concatEPKcj
        CBNZ     r0,|L63.38|
|L63.32|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L63.38|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperRK6String||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperRK6String PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r5
        MOV      r0,r6
        LDR      r2,[r4,#8]
        LDR      r1,[r4,#0]
        BL       _ZN6String6concatEPKcj
        CBNZ     r0,|L64.26|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L64.26|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperc||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEc
        CBNZ     r0,|L65.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L65.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperd||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperd PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8}
        MOV      r4,r0
        VMOV.F32 s16,s0
        VMOV.F32 s17,s1
        MOV      r5,r4
        VMOV.F32 s0,s16
        VMOV.F32 s1,s17
        MOV      r0,r5
        BL       _ZN6String6concatEd
        CBNZ     r0,|L66.40|
        MOV      r0,r5
        BL       _ZN6String10invalidateEv
|L66.40|
        MOV      r0,r5
        VPOP     {d8}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperf||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperf PROC
        PUSH     {r4-r6,lr}
        VPUSH    {d8}
        MOV      r4,r0
        VMOV.F32 s16,s0
        MOV      r5,r4
        VMOV.F32 s0,s16
        MOV      r0,r5
        BL       _ZN6String6concatEf
        CBNZ     r0,|L67.32|
        MOV      r0,r5
        BL       _ZN6String10invalidateEv
|L67.32|
        MOV      r0,r5
        VPOP     {d8}
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperh||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperh PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEh
        CBNZ     r0,|L68.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L68.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperi||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperi PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEi
        CBNZ     r0,|L69.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L69.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperj||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperj PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEj
        CBNZ     r0,|L70.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L70.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperl||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperl PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEl
        CBNZ     r0,|L71.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L71.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i._ZplRK15StringSumHelperm||, CODE, READONLY, ALIGN=1

_ZplRK15StringSumHelperm PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       _ZN6String6concatEm
        CBNZ     r0,|L72.24|
        MOV      r0,r6
        BL       _ZN6String10invalidateEv
|L72.24|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||.ARM.exidx||, LINKORDER=||i.NOPS_FOR_USEC||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        DCD      0x00000000
        RELOC 42, ||i.NOPS_FOR_USEC||
        DCD      0x00000001

        AREA ||area_number.74||, LINKORDER=||i._ZN6String10invalidateEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.74||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String10invalidateEv||
        DCD      0x00000001

        AREA ||area_number.75||, LINKORDER=||i._ZN6String12changeBufferEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.75||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String12changeBufferEj||
        DCD      0x00000001

        AREA ||area_number.76||, LINKORDER=||i._ZN6String7reserveEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.76||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String7reserveEj||
        DCD      0x00000001

        AREA ||area_number.77||, LINKORDER=||i._ZN6String6concatEPKcj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.77||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEPKcj||
        DCD      0x00000001

        AREA ||area_number.78||, LINKORDER=||i._ZplRK15StringSumHelperRK6String||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.78||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperRK6String||
        DCD      0x00000001

        AREA ||area_number.79||, LINKORDER=||i._ZplRK15StringSumHelperPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.79||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperPKc||
        DCD      0x00000001

        AREA ||area_number.80||, LINKORDER=||i._ZN6String6concatEc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.80||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEc||
        DCD      0x00000001

        AREA ||area_number.81||, LINKORDER=||i._ZplRK15StringSumHelperc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.81||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperc||
        DCD      0x00000001

        AREA ||area_number.82||, LINKORDER=||i._ZN6String6concatEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.82||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEh||
        DCD      0x00000001

        AREA ||area_number.83||, LINKORDER=||i._ZplRK15StringSumHelperh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.83||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperh||
        DCD      0x00000001

        AREA ||area_number.84||, LINKORDER=||i._ZN6String6concatEi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.84||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEi||
        DCD      0x00000001

        AREA ||area_number.85||, LINKORDER=||i._ZplRK15StringSumHelperi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.85||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperi||
        DCD      0x00000001

        AREA ||area_number.86||, LINKORDER=||i._ZN6String6concatEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.86||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEj||
        DCD      0x00000001

        AREA ||area_number.87||, LINKORDER=||i._ZplRK15StringSumHelperj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.87||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperj||
        DCD      0x00000001

        AREA ||area_number.88||, LINKORDER=||i._ZN6String6concatEl||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.88||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEl||
        DCD      0x00000001

        AREA ||area_number.89||, LINKORDER=||i._ZplRK15StringSumHelperl||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.89||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperl||
        DCD      0x00000001

        AREA ||area_number.90||, LINKORDER=||i._ZN6String6concatEm||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.90||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEm||
        DCD      0x00000001

        AREA ||area_number.91||, LINKORDER=||i._ZplRK15StringSumHelperm||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.91||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperm||
        DCD      0x00000001

        AREA ||area_number.92||, LINKORDER=||i._ZN6String6concatEf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.92||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEf||
        DCD      0x00000001

        AREA ||area_number.93||, LINKORDER=||i._ZplRK15StringSumHelperf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.93||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperf||
        DCD      0x00000001

        AREA ||area_number.94||, LINKORDER=||i._ZN6String6concatEd||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.94||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEd||
        DCD      0x00000001

        AREA ||area_number.95||, LINKORDER=||i._ZplRK15StringSumHelperd||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.95||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZplRK15StringSumHelperd||
        DCD      0x00000001

        AREA ||area_number.96||, LINKORDER=||i._ZN6String4copyEPKcj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.96||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String4copyEPKcj||
        DCD      0x00000001

        AREA ||area_number.97||, LINKORDER=||i._ZN6StringC1EPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.97||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1EPKc||
        DCD      0x00000001

        AREA ||area_number.98||, LINKORDER=||i._ZN6StringaSERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.98||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringaSERKS_||
        DCD      0x00000001

        AREA ||area_number.99||, LINKORDER=||i._ZN6StringC1ERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.99||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1ERKS_||
        DCD      0x00000001

        AREA ||area_number.100||, LINKORDER=||i._ZN6StringaSEPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.100||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringaSEPKc||
        DCD      0x00000001

        AREA ||area_number.101||, LINKORDER=||i._ZN6StringC1Ec||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.101||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Ec||
        DCD      0x00000001

        AREA ||area_number.102||, LINKORDER=||i._ZN6StringC1Ehh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.102||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Ehh||
        DCD      0x00000001

        AREA ||area_number.103||, LINKORDER=||i._ZN6StringC1Eih||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.103||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Eih||
        DCD      0x00000001

        AREA ||area_number.104||, LINKORDER=||i._ZN6StringC1Ejh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.104||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Ejh||
        DCD      0x00000001

        AREA ||area_number.105||, LINKORDER=||i._ZN6StringC1Elh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.105||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Elh||
        DCD      0x00000001

        AREA ||area_number.106||, LINKORDER=||i._ZN6StringC1Emh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.106||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Emh||
        DCD      0x00000001

        AREA ||area_number.107||, LINKORDER=||i._ZN6StringC1Efh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.107||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Efh||
        DCD      0x00000001

        AREA ||area_number.108||, LINKORDER=||i._ZN6StringC1Edh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.108||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringC1Edh||
        DCD      0x00000001

        AREA ||area_number.109||, LINKORDER=||i._ZN6StringD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.109||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringD1Ev||
        DCD      0x00000001

        AREA ||area_number.110||, LINKORDER=||i._ZN6String6concatERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.110||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatERKS_||
        DCD      0x00000001

        AREA ||area_number.111||, LINKORDER=||i._ZN6String6concatEPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.111||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6concatEPKc||
        DCD      0x00000001

        AREA ||area_number.112||, LINKORDER=||i._ZNK6String9compareToERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.112||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String9compareToERKS_||
        DCD      0x00000001

        AREA ||area_number.113||, LINKORDER=||i._ZNK6String6equalsERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.113||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String6equalsERKS_||
        DCD      0x00000001

        AREA ||area_number.114||, LINKORDER=||i._ZNK6String6equalsEPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.114||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String6equalsEPKc||
        DCD      0x00000001

        AREA ||area_number.115||, LINKORDER=||i._ZNK6StringltERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.115||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6StringltERKS_||
        DCD      0x00000001

        AREA ||area_number.116||, LINKORDER=||i._ZNK6StringgtERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.116||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6StringgtERKS_||
        DCD      0x00000001

        AREA ||area_number.117||, LINKORDER=||i._ZNK6StringleERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.117||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6StringleERKS_||
        DCD      0x00000001

        AREA ||area_number.118||, LINKORDER=||i._ZNK6StringgeERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.118||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6StringgeERKS_||
        DCD      0x00000001

        AREA ||area_number.119||, LINKORDER=||i._ZNK6String16equalsIgnoreCaseERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.119||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String16equalsIgnoreCaseERKS_||
        DCD      0x00000001

        AREA ||area_number.120||, LINKORDER=||i._ZNK6String10startsWithERKS_j||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.120||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String10startsWithERKS_j||
        DCD      0x00000001

        AREA ||area_number.121||, LINKORDER=||i._ZNK6String10startsWithERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.121||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String10startsWithERKS_||
        DCD      0x00000001

        AREA ||area_number.122||, LINKORDER=||i._ZNK6String8endsWithERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.122||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String8endsWithERKS_||
        DCD      0x00000001

        AREA ||area_number.123||, LINKORDER=||i._ZNK6StringixEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.123||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6StringixEj||
        DCD      0x00000001

        AREA ||area_number.124||, LINKORDER=||i._ZNK6String6charAtEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.124||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String6charAtEj||
        DCD      0x00000001

        AREA ||area_number.125||, LINKORDER=||i._ZN6String9setCharAtEjc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.125||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String9setCharAtEjc||
        DCD      0x00000001

        AREA ||area_number.126||, LINKORDER=||i._ZN6StringixEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.126||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6StringixEj||
        DCD      0x00000001

        AREA ||area_number.127||, LINKORDER=||i._ZNK6String8getBytesEPhjj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.127||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String8getBytesEPhjj||
        DCD      0x00000001

        AREA ||area_number.128||, LINKORDER=||i._ZNK6String7indexOfEcj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.128||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String7indexOfEcj||
        DCD      0x00000001

        AREA ||area_number.129||, LINKORDER=||i._ZNK6String7indexOfEc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.129||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String7indexOfEc||
        DCD      0x00000001

        AREA ||area_number.130||, LINKORDER=||i._ZNK6String7indexOfERKS_j||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.130||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String7indexOfERKS_j||
        DCD      0x00000001

        AREA ||area_number.131||, LINKORDER=||i._ZNK6String7indexOfERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.131||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String7indexOfERKS_||
        DCD      0x00000001

        AREA ||area_number.132||, LINKORDER=||i._ZNK6String11lastIndexOfEcj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.132||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String11lastIndexOfEcj||
        DCD      0x00000001

        AREA ||area_number.133||, LINKORDER=||i._ZNK6String11lastIndexOfEc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.133||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String11lastIndexOfEc||
        DCD      0x00000001

        AREA ||area_number.134||, LINKORDER=||i._ZNK6String11lastIndexOfERKS_j||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.134||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String11lastIndexOfERKS_j||
        DCD      0x00000001

        AREA ||area_number.135||, LINKORDER=||i._ZNK6String11lastIndexOfERKS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.135||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String11lastIndexOfERKS_||
        DCD      0x00000001

        AREA ||area_number.136||, LINKORDER=||i._ZNK6String9substringEjj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.136||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String9substringEjj||
        DCD      0x00000001

        AREA ||area_number.137||, LINKORDER=||i._ZN6String7replaceEcc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.137||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String7replaceEcc||
        DCD      0x00000001

        AREA ||area_number.138||, LINKORDER=||i._ZN6String7replaceERKS_S1_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.138||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String7replaceERKS_S1_||
        DCD      0x00000001

        AREA ||area_number.139||, LINKORDER=||i._ZN6String6removeEjj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.139||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6removeEjj||
        DCD      0x00000001

        AREA ||area_number.140||, LINKORDER=||i._ZN6String6removeEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.140||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String6removeEj||
        DCD      0x00000001

        AREA ||area_number.141||, LINKORDER=||i._ZN6String11toLowerCaseEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.141||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String11toLowerCaseEv||
        DCD      0x00000001

        AREA ||area_number.142||, LINKORDER=||i._ZN6String11toUpperCaseEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.142||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String11toUpperCaseEv||
        DCD      0x00000001

        AREA ||area_number.143||, LINKORDER=||i._ZN6String4trimEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.143||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String4trimEv||
        DCD      0x00000001

        AREA ||area_number.144||, LINKORDER=||i._ZNK6String5toIntEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.144||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String5toIntEv||
        DCD      0x00000001

        AREA ||area_number.145||, LINKORDER=||i._ZNK6String7toFloatEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.145||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZNK6String7toFloatEv||
        DCD      0x00000001

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

dummy_writable_char
        DCB      0x00

        AREA ||i.isspace||, COMGROUP=isspace, CODE, READONLY, ALIGN=1

isspace PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        BL       __rt_ctype_table
        LDR      r0,[r0,#0]
        LDRB     r0,[r0,r4]
        AND      r0,r0,#1
        POP      {r4,pc}
        ENDP


        AREA ||area_number.456||, COMGROUP=isspace, LINKORDER=||i.isspace||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.456||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i.isspace||
        DCD      0x00000001

        AREA ||i._ZN6String4initEv||, COMGROUP=_ZN6String4initEv, CODE, READONLY, ALIGN=1

_ZN6String4initEv PROC
        MOVS     r1,#0
        STR      r1,[r0,#0]
        STR      r1,[r0,#4]
        STR      r1,[r0,#8]
        BX       lr
        ENDP


        AREA ||area_number.462||, COMGROUP=_ZN6String4initEv, LINKORDER=||i._ZN6String4initEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.462||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZN6String4initEv||
        DCD      0x00000001

        AREA ||i._ZSt6strstrPcPKc||, COMGROUP=_ZSt6strstrPcPKc, CODE, READONLY, ALIGN=1

_ZSt6strstrPcPKc PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       strstr
        POP      {r4-r6,pc}
        ENDP


        AREA ||area_number.468||, COMGROUP=_ZSt6strstrPcPKc, LINKORDER=||i._ZSt6strstrPcPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

        EXPORTAS ||area_number.468||, ||.ARM.exidx||
        DCD      0x00000000
        RELOC 42, ||i._ZSt6strstrPcPKc||
        DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "cores\\WString.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_WString_cpp_dbd866df___Z7__REV16j|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_WString_cpp_dbd866df___Z7__REV16j| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_WString_cpp_dbd866df___Z7__REVSHi|
#line 462
|__asm___11_WString_cpp_dbd866df___Z7__REVSHi| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_WString_cpp_dbd866df___Z5__RRXj|
#line 649
|__asm___11_WString_cpp_dbd866df___Z5__RRXj| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT NOPS_FOR_USEC [CODE]
        EXPORT _ZN6String10invalidateEv [CODE]
        EXPORT _ZN6String11toLowerCaseEv [CODE]
        EXPORT _ZN6String11toUpperCaseEv [CODE]
        EXPORT _ZN6String12changeBufferEj [CODE]
        EXPORT _ZN6String4copyEPKcj [CODE]
        EXPORT _ZN6String4trimEv [CODE]
        EXPORT _ZN6String6concatEPKc [CODE]
        EXPORT _ZN6String6concatEPKcj [CODE]
        EXPORT _ZN6String6concatERKS_ [CODE]
        EXPORT _ZN6String6concatEc [CODE]
        EXPORT _ZN6String6concatEd [CODE]
        EXPORT _ZN6String6concatEf [CODE]
        EXPORT _ZN6String6concatEh [CODE]
        EXPORT _ZN6String6concatEi [CODE]
        EXPORT _ZN6String6concatEj [CODE]
        EXPORT _ZN6String6concatEl [CODE]
        EXPORT _ZN6String6concatEm [CODE]
        EXPORT _ZN6String6removeEj [CODE]
        EXPORT _ZN6String6removeEjj [CODE]
        EXPORT _ZN6String7replaceERKS_S1_ [CODE]
        EXPORT _ZN6String7replaceEcc [CODE]
        EXPORT _ZN6String7reserveEj [CODE]
        EXPORT _ZN6String9setCharAtEjc [CODE]
        EXPORT _ZN6StringC2EPKc [CODE]
        EXPORT _ZN6StringC1EPKc [CODE]
        EXPORT _ZN6StringC2ERKS_ [CODE]
        EXPORT _ZN6StringC1ERKS_ [CODE]
        EXPORT _ZN6StringC2Ec [CODE]
        EXPORT _ZN6StringC1Ec [CODE]
        EXPORT _ZN6StringC2Edh [CODE]
        EXPORT _ZN6StringC1Edh [CODE]
        EXPORT _ZN6StringC2Efh [CODE]
        EXPORT _ZN6StringC1Efh [CODE]
        EXPORT _ZN6StringC2Ehh [CODE]
        EXPORT _ZN6StringC1Ehh [CODE]
        EXPORT _ZN6StringC2Eih [CODE]
        EXPORT _ZN6StringC1Eih [CODE]
        EXPORT _ZN6StringC2Ejh [CODE]
        EXPORT _ZN6StringC1Ejh [CODE]
        EXPORT _ZN6StringC2Elh [CODE]
        EXPORT _ZN6StringC1Elh [CODE]
        EXPORT _ZN6StringC2Emh [CODE]
        EXPORT _ZN6StringC1Emh [CODE]
        EXPORT _ZN6StringD2Ev [CODE]
        EXPORT _ZN6StringD1Ev [CODE]
        EXPORT _ZN6StringaSEPKc [CODE]
        EXPORT _ZN6StringaSERKS_ [CODE]
        EXPORT _ZN6StringixEj [CODE]
        EXPORT _ZNK6String10startsWithERKS_ [CODE]
        EXPORT _ZNK6String10startsWithERKS_j [CODE]
        EXPORT _ZNK6String11lastIndexOfERKS_ [CODE]
        EXPORT _ZNK6String11lastIndexOfERKS_j [CODE]
        EXPORT _ZNK6String11lastIndexOfEc [CODE]
        EXPORT _ZNK6String11lastIndexOfEcj [CODE]
        EXPORT _ZNK6String16equalsIgnoreCaseERKS_ [CODE]
        EXPORT _ZNK6String5toIntEv [CODE]
        EXPORT _ZNK6String6charAtEj [CODE]
        EXPORT _ZNK6String6equalsEPKc [CODE]
        EXPORT _ZNK6String6equalsERKS_ [CODE]
        EXPORT _ZNK6String7indexOfERKS_ [CODE]
        EXPORT _ZNK6String7indexOfERKS_j [CODE]
        EXPORT _ZNK6String7indexOfEc [CODE]
        EXPORT _ZNK6String7indexOfEcj [CODE]
        EXPORT _ZNK6String7toFloatEv [CODE]
        EXPORT _ZNK6String8endsWithERKS_ [CODE]
        EXPORT _ZNK6String8getBytesEPhjj [CODE]
        EXPORT _ZNK6String9compareToERKS_ [CODE]
        EXPORT _ZNK6String9substringEjj [CODE]
        EXPORT _ZNK6StringgeERKS_ [CODE]
        EXPORT _ZNK6StringgtERKS_ [CODE]
        EXPORT _ZNK6StringixEj [CODE]
        EXPORT _ZNK6StringleERKS_ [CODE]
        EXPORT _ZNK6StringltERKS_ [CODE]
        EXPORT _ZplRK15StringSumHelperPKc [CODE]
        EXPORT _ZplRK15StringSumHelperRK6String [CODE]
        EXPORT _ZplRK15StringSumHelperc [CODE]
        EXPORT _ZplRK15StringSumHelperd [CODE]
        EXPORT _ZplRK15StringSumHelperf [CODE]
        EXPORT _ZplRK15StringSumHelperh [CODE]
        EXPORT _ZplRK15StringSumHelperi [CODE]
        EXPORT _ZplRK15StringSumHelperj [CODE]
        EXPORT _ZplRK15StringSumHelperl [CODE]
        EXPORT _ZplRK15StringSumHelperm [CODE]
        EXPORT isspace [CODE]
        EXPORT _ZN6String4initEv [CODE]
        EXPORT _ZSt6strstrPcPKc [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT ||Lib$$Request$$cpplib|| [CODE,WEAK]
        IMPORT free [CODE]
        IMPORT realloc [CODE]
        IMPORT strcpy [CODE]
        IMPORT strlen [CODE]
        IMPORT itoa [CODE]
        IMPORT utoa [CODE]
        IMPORT ltoa [CODE]
        IMPORT ultoa [CODE]
        IMPORT dtostrf [CODE]
        IMPORT __aeabi_d2f [CODE]
        IMPORT strcmp [CODE]
        IMPORT tolower [CODE]
        IMPORT strncmp [CODE]
        IMPORT strncpy [CODE]
        IMPORT strchr [CODE]
        IMPORT strrchr [CODE]
        IMPORT __aeabi_memcpy [CODE]
        IMPORT __aeabi_memmove [CODE]
        IMPORT toupper [CODE]
        IMPORT atol [CODE]
        IMPORT __hardfp_atof [CODE]
        IMPORT __rt_ctype_table [CODE]
        IMPORT strstr [CODE]

        KEEP dummy_writable_char

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,6,0
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
